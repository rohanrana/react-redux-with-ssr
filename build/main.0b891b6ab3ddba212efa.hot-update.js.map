{"version":3,"file":"main.0b891b6ab3ddba212efa.hot-update.js","sources":["webpack:///./src/redux/Reducers/DataReducer.js","webpack:///./src/redux/Reducers/index.js","webpack:///./src/redux/store.js","webpack:///./src/server.js","webpack:///external \"redux-logger\"","webpack:///external \"redux-thunk\""],"sourcesContent":["import { FETCH_START, FETCH_SUCCESS, FETCH_ERROR } from \"../ActionTypes\";\n\nconst INIT_STATE = {\n  error: \"\",\n  loading: false,\n  message: \"\",\n  data:[]\n};\n\nconst DataReducer = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case FETCH_START: {\n      return { ...state, error: \"\", message: \"\", loading: true };\n    }\n    case FETCH_SUCCESS: {\n      return {\n        ...state,\n        error: \"\",\n        message: \"\",\n        loading: false,\n        data: action.payload\n      };\n    }\n\n    case FETCH_ERROR: {\n      return { ...state, loading: false, error: action.payload, message: \"\" };\n    }\n\n    default:\n      return state;\n  }\n};\nexport default DataReducer;\n","import { combineReducers } from \"redux\";\nimport DataReducer from \"./DataReducer\";\n\nconst reducers = combineReducers({\n      \ndata:DataReducer\n});\n\nexport default reducers;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport reducers from \"./Reducers\";\n\nconst store = createStore(\n  reducers,\n  {},\n  applyMiddleware(thunk, logger)\n);\n\nexport default store;\n","\nimport express from \"express\";\nimport { matchRoutes } from \"react-router-config\";\nimport Routes from \"./Routes\";\nimport createStore from \"./redux/store\";\n\nconst server = express();\n\nserver\n  .disable(\"x-powered-by\")\n  .use(express.static(process.env.RAZZLE_PUBLIC_DIR))\n  .get(\"*\", (req, res) => {\n\n    // console.log(\"REQ STORE\",req)\n    const store = createStore(req);\n\n    const promises = matchRoutes(Routes, req.path).map(({ route }) => {\n      console.log(\"routes\", route);\n\n      return route.loadData ? route.loadData(store) : null;\n    }).map(promise=>{\n      if(promise)\n      {\n        return new Promise((resolve,reject)=>{\n          promise.then(resolve).catch(resolve)\n        })\n      }\n    });\n    Promise.all(promises).then(() => {\n      const context = {};\n      const content = renderer(req, store, context);\n      console.log(\"Context\", context);\n  \n  \n      if(context.url){\n        res.redirect(301,context.url)\n      }\n      if (context.notFound) {\n        res.status(404);\n      }\n      res.send(content);\n    });\n  \n\n    //     console.log(\"Request\",req)\n    //     const context = {};\n\n    //     const markup = renderToString(\n    //       <Provider store={store}>\n    //         <StaticRouter context={context} location={req.url}>\n    //           <App />\n    //         </StaticRouter>\n    //       </Provider>\n    //     );\n    //     if (context.url) {\n    //       res.redirect(context.url);\n    //     } else {\n    //       res.status(200).send(\n    //         `<!doctype html>\n    //     <html lang=\"\">\n    //     <head>\n    //         <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    //         <meta charset=\"utf-8\" />\n    //         <title>Welcome to Razzle</title>\n    //         <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    //         ${\n    //           assets.client.css\n    //             ? `<link rel=\"stylesheet\" href=\"${assets.client.css}\">`\n    //             : \"\"\n    //         }\n    //         ${\n    //           process.env.NODE_ENV === \"production\"\n    //             ? `<script src=\"${assets.client.js}\" defer></script>`\n    //             : `<script src=\"${assets.client.js}\" defer crossorigin></script>`\n    //         }\n    //         <script>\n    //         window.INTIAL_STATE =${serialize(store.getState())}\n    //        </script>\n    //     </head>\n    //     <body>\n    //         <div id=\"root\">${markup}</div>\n    //     </body>\n    // </html>`\n    //       );\n    //     }\n  });\n\nexport default server;\n","module.exports = require(\"redux-logger\");","module.exports = require(\"redux-thunk\");"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAnBA;AAqBA;AACA;AAAA;;;;;;;;;;;;AChCA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAKA;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAMA;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAKA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;ACvFA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}