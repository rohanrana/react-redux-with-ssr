{"version":3,"file":"main.5cd9c1233dd4004e74e1.hot-update.js","sources":["webpack:///./src/Routes/index.js","webpack:///./src/containers/Employees/index.js"],"sourcesContent":["import React from \"react\";\nimport App from \"../App\";\nimport Matches from \"../containers/Matches\";\nimport Home from \"../Home\";\nimport Employees from \"../containers/Employees\";\n\n// refactoring code for ssr\n// export default () => {\n//   return <div>\n//     <Route exact path=\"/\" component={Home} />\n//     <Route path='/users' component={usersList}/>\n//   </div>;\n// };\nexport default [\n  {\n    ...App,\n    routes: [\n      {\n        ...Home,\n        path: \"/\",\n        exact: true\n      },\n      {\n        ...Employees,\n        path: \"/employees\"\n      }\n    ]\n  }\n];\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchData } from \"../../redux/Actions/CommonActions\";\nimport { Layout, Menu, Breadcrumb, Card, Col, Row, Spin } from \"antd\";\nconst { Meta } = Card;\nconst { Header, Content, Footer } = Layout;\nclass Matches extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n  componentDidMount() {\n    this.props.OnDataRecevied();\n  }\n  componentWillReceiveProps(netxProps) {\n    console.log(netxProps);\n    this.setState({ data: netxProps.data.data });\n    // }\n  }\n  render() {\n    return (\n      <Layout>\n        <Header style={{ position: \"fixed\", zIndex: 1, width: \"100%\" }}>\n          <div className=\"logo\" />\n          <Menu\n            theme=\"dark\"\n            mode=\"horizontal\"\n            defaultSelectedKeys={[\"2\"]}\n            style={{ lineHeight: \"64px\" }}\n          >\n            <Menu.Item key=\"1\">Razzel With Redux </Menu.Item>\n            {/* <Menu.Item key=\"2\">nav 2</Menu.Item>\n            <Menu.Item key=\"3\">nav 3</Menu.Item> */}\n          </Menu>\n        </Header>\n        <Content style={{ padding: \"0 50px\", marginTop: 64 }}>\n          {/* <Breadcrumb style={{ margin: \"16px 0\" }}>\n            <Breadcrumb.Item>Home</Breadcrumb.Item>\n            <Breadcrumb.Item>List</Breadcrumb.Item>\n            <Breadcrumb.Item>App</Breadcrumb.Item>\n          </Breadcrumb> */}\n          <div\n            className=\"loading_div\"\n            style={{ padding: 24, minHeight: 380, alignItems: \"center\" }}\n          >\n            {this.props.loading && (\n              <Spin size=\"large\" spinning tip={\"Loading..\"} />\n            )}\n            <Row gutter={16}>\n              {this.state.data.splice(0,10).map((d, index) => {\n                return (\n                  <Col key={index} style={{ marginTop: 10 }} span={6}>\n                    <Card\n                      hoverable\n                      style={{ width: 240 }}\n                      cover={\n                        <img\n                          alt=\"example\"\n                          src=\"https://images.unsplash.com/photo-1506744038136-46273834b3fb?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\"\n                        />\n                      }\n                    >\n                      <Meta\n                        title={d.employee_name}\n                        description=\"www.instagram.com\"\n                      />\n                    </Card>\n                  </Col>\n                );\n              })}\n            </Row>\n          </div>\n        </Content>\n        <Footer style={{ textAlign: \"center\" }}>Made With love in India</Footer>\n      </Layout>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    loading: state.data.loading,\n    error: state.data.error,\n    data: state.data.data\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    OnDataRecevied: () => dispatch(fetchData())\n  };\n};\nconst loadData = store => {\n  return store.dispatch(fetchData());\n};\nexport default {\n  loadData,\n  component: connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Matches)\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAGA;AACA;AAJA;AAQA;AARA;AAHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;AAAA;AACA;AACA;;;AACA;AACA;AACA;AAAA;AAAA;AAEA;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAOA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAxEA;AACA;AAyEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;;;;A","sourceRoot":""}