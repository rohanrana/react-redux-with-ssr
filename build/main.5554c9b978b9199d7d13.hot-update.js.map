{"version":3,"file":"main.5554c9b978b9199d7d13.hot-update.js","sources":["webpack:///./src/redux/Reducers/DataReducer.js","webpack:///./src/redux/Reducers/index.js","webpack:///./src/redux/store.js","webpack:///./src/server.js","webpack:///external \"redux\"","webpack:///external \"redux-logger\"","webpack:///external \"redux-thunk\""],"sourcesContent":["import { FETCH_START, FETCH_SUCCESS, FETCH_ERROR } from \"../ActionTypes\";\n\nconst INIT_STATE = {\n  error: \"\",\n  loading: false,\n  message: \"\"\n};\n\nexport default DataReducer = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case FETCH_START: {\n      return { ...state, error: \"\", message: \"\", loading: true };\n    }\n    case FETCH_SUCCESS: {\n      return {\n        ...state,\n        error: \"\",\n        message: \"\",\n        loading: false,\n        data: action.payload\n      };\n    }\n\n    case FETCH_ERROR: {\n      return { ...state, loading: false, error: action.payload, message: \"\" };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { routerReducer } from \"react-router-redux\";\nimport Auth from \"./Auth\";\nimport Commonm from \"./Common\";\nimport Diamond from \"./diamond\";\nimport DeleteReminder from \"./deleteReminder\";\nimport DataReducer from \"./DataReducer\";\n\nconst reducers = combineReducers({\n      \ndata:DataReducer\n});\n\nexport default reducers;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport reducers from \"./Reducers\";\n\nconst store = createStore(reducers, applyMiddleware(thunk, logger));\n\nexport default store;\n","import App from \"./App\";\nimport React from \"react\";\nimport { StaticRouter } from \"react-router-dom\";\nimport express from \"express\";\nimport { renderToString } from \"react-dom/server\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n\nconst server = express();\nserver\n  .disable(\"x-powered-by\")\n  .use(express.static(process.env.RAZZLE_PUBLIC_DIR))\n  .get(\"/*\", (req, res) => {\n    const context = {};\n    const markup = renderToString(\n      <Provider store={store}>\n        <StaticRouter context={context} location={req.url}>\n          <App />\n        </StaticRouter>\n      </Provider>\n    );\n\n    if (context.url) {\n      res.redirect(context.url);\n    } else {\n      res.status(200).send(\n        `<!doctype html>\n    <html lang=\"\">\n    <head>\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta charset=\"utf-8\" />\n        <title>Welcome to Razzle</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        ${\n          assets.client.css\n            ? `<link rel=\"stylesheet\" href=\"${assets.client.css}\">`\n            : \"\"\n        }\n        ${\n          process.env.NODE_ENV === \"production\"\n            ? `<script src=\"${assets.client.js}\" defer></script>`\n            : `<script src=\"${assets.client.js}\" defer crossorigin></script>`\n        }\n    </head>\n    <body>\n        <div id=\"root\">${markup}</div>\n    </body>\n</html>`\n      );\n    }\n  });\n\nexport default server;\n","module.exports = require(\"redux\");","module.exports = require(\"redux-logger\");","module.exports = require(\"redux-thunk\");"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAnBA;AAqBA;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAKA;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AAwBA;AACA;AAEA;;;;;;;;;;;ACrDA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}