{"version":3,"file":"main.d53cfd6a2d8e9b5904af.hot-update.js","sources":["webpack:///./src/containers/Matches/index.js","webpack:///./src/redux/Actions/CommonActions.js","webpack:///external \"axios\"","webpack:///external \"consola\""],"sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchData } from \"../../redux/Actions/CommonActions\";\nimport consolaGlobalInstance from \"consola\";\nclass Matches extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n  componentDidMount() {\n    this.props.OnDataRecevied();\n  }\n  componentWillReceiveProps(netxProps) {\n    console.log(\"Data Next Props\", netxProps.data.data);\n    // if (netxProps.data.data.length > 0) {/\n      this.setState({ data: netxProps.data.data });\n    // }\n  }\n  render() {\n    //   consolaGlobalInstance.lo\n    // console.log(\"DATA DTA A\", this.props.data.data);\n    return (\n      <div>\n        <ul>\n          {this.state.data.map((d, index) => (\n            <li>{d.employee_name}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    loading: state.data.loading,\n    error: state.data.error,\n    data: state.data.data\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    OnDataRecevied: () => dispatch(fetchData())\n  };\n};\nconst loadData = store => {\n  return store.dispatch(fetchData());\n  console.log(\"I m trying to load data\");\n};\nexport default {\n  loadData,\n  component: connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Matches)\n};\n\n","import { FETCH_START, FETCH_SUCCESS, FETCH_ERROR } from \"../ActionTypes\";\nimport axios from \"axios\";\nexport const fetchStart = () => {\n  return {\n    type: FETCH_START\n  };\n};\n\nexport const fetchSuccess = () => {\n  return {\n    type: FETCH_SUCCESS\n  };\n};\n\nexport const fetchError = error => {\n  return {\n    type: FETCH_ERROR,\n    payload: error\n  };\n};\n\nexport const fetchData = () => {\n  return dispatch => {\n    dispatch({ type: FETCH_START });\n    axios\n      .get(\"http://dummy.restapiexample.com/api/v1/employees\")\n      .then(data => {\n        if (data) {\n          dispatch({ type: FETCH_SUCCESS, payload: data });\n\n          console.log(\"Data In Redux\", data);\n        } else {\n          dispatch({ type: FETCH_ERROR, payload: data.error });\n        }\n      })\n      .catch(function(error) {\n        dispatch({ type: FETCH_ERROR, payload: error.message });\n        console.log(\"Error****:\", error.message);\n      });\n  };\n};\n","module.exports = require(\"axios\");","module.exports = require(\"consola\");"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;AAAA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAMA;;;;AA5BA;AACA;AA6BA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;;;;;;;;;;;;ACnDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACxCA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}